#!/usr/bin/env php
<?php

use App\Common\Console\Application;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Dotenv\Dotenv;
use Symfony\Component\ErrorHandler\Debug;

if (!in_array(PHP_SAPI, ['cli', 'phpdbg', 'embed'], true)) {
    echo 'Warning: The console should be invoked via the CLI version of PHP, not the ' . PHP_SAPI . ' SAPI' . PHP_EOL;
}

set_time_limit(0);

require dirname(__DIR__) . '/vendor/autoload.php';

if (!class_exists(ArgvInput::class) || !class_exists(Dotenv::class)) {
    throw new LogicException('You need to add "symfony/console" and "symfony/dotenv" as Composer dependencies.');
}

$input = new ArgvInput();
if (null !== $env = $input->getParameterOption(['--env', '-e'], null, true)) {
    putenv('APP_ENV=' . $_SERVER['APP_ENV'] = $_ENV['APP_ENV'] = $env);
}

if ($input->hasParameterOption('--no-debug', true)) {
    putenv('APP_DEBUG=' . $_SERVER['APP_DEBUG'] = $_ENV['APP_DEBUG'] = '0');
}

(new Dotenv())->bootEnv(dirname(__DIR__) . '/.env');

if ($_SERVER['APP_DEBUG']) {
    umask(0000);

    if (class_exists(Debug::class)) {
        Debug::enable();
    }
}

// Define root directory
define('APP_ROOT', dirname(__DIR__));
// Define debug mode
define('DEBUG_MODE', (bool) $_SERVER['APP_DEBUG']);
// if the /tinymvc/ dir is not up one directory, uncomment and set here
define('TMVC_BASEDIR', realpath(APP_ROOT . '/tinymvc') . '/');
// if the /myapp/ dir is not inside the /tinymvc/ dir, uncomment and set here
define('TMVC_MYAPPDIR', realpath(APP_ROOT . '/tinymvc/myapp') . '/');
// define to 0 if you want errors/exceptions handled externally
define('TMVC_ERROR_HANDLING', 0);

$kernel = new tmvc();
$application = new Application($kernel);
$application->run($input);
