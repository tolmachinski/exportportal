tinymce.PluginManager.add('charactercount', function (editor) {
    var self = this;
    var textcount = 0;
    var max_textcount = editor.targetElm.dataset.max;
    var statusbar, to_replace_text, charactercouter_replacedtext;

    function update() {
        textcount = self.getCount();
        if(typeof max_textcount != 'undefined'){
            charactercouter_replacedtext = [to_replace_text, textcount, max_textcount];
            var text_element = statusbar.find('.charactercount')[0].$el[0];
            if(typeof text_element != 'undefined'){
                if(max_textcount < textcount){
                    text_element.classList.add('txt-red');
                } else{
                    text_element.classList.remove('txt-red');
                }
            }
        } else{
            charactercouter_replacedtext = [to_replace_text, textcount];
        }

        editor.theme.panel.find('#charactercount').text(charactercouter_replacedtext);
    }

    editor.on('init', function () {
        textcount = self.getCount();

        if(typeof max_textcount != 'undefined'){
            to_replace_text = 'Characters: {0}, max: {1} allowed';
            charactercouter_replacedtext = [to_replace_text, textcount, max_textcount];
        } else{
            to_replace_text = 'Characters: {0}';
            charactercouter_replacedtext = [to_replace_text, textcount];
        }

        statusbar = editor.theme.panel && editor.theme.panel.find('#statusbar')[0];
        if (statusbar) {
            window.setTimeout(function () {
            statusbar.insert({
                type: 'label',
                name: 'charactercount',
                text: charactercouter_replacedtext,
                classes: 'charactercount',
                disabled: editor.settings.readonly
            }, 0);

            editor.on('setcontent beforeaddundo', update);

            editor.on('keyup', function (e) {
                update();
            });
            }, 0);
        }
    });

    self.getCount = function () {
        var tx = editor.getContent({ format: 'text' });
		var decodedStripped = tx;
        if(tx.length === 1 && tx.charCodeAt() === 10){
            return 0;
        }


		// remove control characters
        // replace with empty space
		decodedStripped = decodedStripped.replace(/\xA0/g,' ');
        // replace with empty space
		decodedStripped = decodedStripped.replace(/\r/g, ' ');
        // replace with space
		decodedStripped = decodedStripped.replace(/\n/g, ' ');
        // replace with space
		decodedStripped = decodedStripped.replace(/\t/g, ' ');
		// remove multiple spaces
        // decodedStripped = decodedStripped.replace(/ {2,}/g,' ');
        // decodedStripped = decodedStripped.trim();

        var extended = decodedStripped.match(/[^\x00-\xff]/gi);

        if (extended == null) {
            tc = decodedStripped.length;
        } else {
            tc = decodedStripped.length + extended.length;
        }

        return tc;
    };

    function decodeHtml(html) {
        var txt = document.createElement("textarea");
        txt.innerHTML = html;
        return txt.value;
    }
});
