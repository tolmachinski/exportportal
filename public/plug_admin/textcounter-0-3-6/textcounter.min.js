/*!
* jQuery Text Counter Plugin v0.3.6
* https://github.com/ractoon/jQuery-Text-Counter
*
* Copyright 2014 ractoon
* Released under the MIT license
*/
(function($){$.textcounter=function(el,options){var base=this;base.$el=$(el);base.el=el;base.$el.data("textcounter",base);base.init=function(){base.options=$.extend({},$.textcounter.defaultOptions,options);var counterText=base.options.countDown?base.options.countDownText:base.options.counterText,counterNum=base.options.countDown?base.options.max:0;base.$el.after('<'+base.options.countContainerElement+' class="'+base.options.countContainerClass+'">'+counterText+'<span class="'+base.options.textCountClass+'">'+counterNum+'</span></'+base.options.countContainerElement+'>');base.$el.bind('keyup.textcounter click.textcounter blur.textcounter focus.textcounter change.textcounter paste.textcounter',base.checkLimits).trigger('click.textcounter');base.options.init(base.el)};base.checkLimits=function(e){var $this=base.$el,$countEl=$this.nextAll('.'+base.options.countContainerClass),$text=$this.val(),textCount=0,textTotalCount=0,eventTriggered=e.originalEvent===undefined?!1:!0;if(!$.isEmptyObject($text)){if(base.options.type=="word"){textCount=$text.trim().replace(/\s+/gi,' ').split(' ').length}
else{if(base.options.countSpaces){textCount=$text.replace(/[^\S\n|\r|\r\n]/g,' ').length}
else{textCount=$text.replace(/\s/g,'').length}
if(base.options.countExtendedCharacters){var extended=$text.match(/[^\x00-\xff]/gi);if(extended==null){textCount=$text.length}else{textCount=$text.length+extended.length}}}}
if(base.options.max=='auto'){var max=base.$el.attr('maxlength');if(typeof max!=='undefined'&&max!==!1){base.options.max=max}
else{base.$el.nextAll('.'+base.options.countContainerClass).text('error: [maxlength] attribute not set')}}
textTotalCount=base.options.countDown?base.options.max-textCount:textCount;base.setCount(textTotalCount);if(base.options.min>0&&eventTriggered){if(textCount<base.options.min){base.setErrors('min');base.options.minunder(base.el)}
else if(textCount>=base.options.min){base.options.mincount(base.el);base.clearErrors('min')}}
if(base.options.max!==-1){if(textCount>=base.options.max&&base.options.max!=0){base.options.maxcount(base.el);if(base.options.stopInputAtMaximum){var trimmedString='';if(base.options.type=="word"){var wordArray=$text.split(/[^\S\n]/g);var i=0;while(i<wordArray.length){if(i>=base.options.max-1)break;if(wordArray[i]!==undefined){trimmedString+=wordArray[i]+' ';i++}}}
else{if(base.options.countSpaces){trimmedString=$text.substring(0,base.options.max)}
else{var charArray=$text.split(''),totalCharacters=charArray.length,charCount=0,i=0;while(charCount<base.options.max&&i<totalCharacters){if(charArray[i]!==' ')charCount++;trimmedString+=charArray[i++]}}}
$this.val(trimmedString.trim());textTotalCount=base.options.countDown?0:base.options.max;base.setCount(textTotalCount)}else{base.setErrors('max')}}
else{base.options.maxunder(base.el);base.clearErrors('max')}}};base.setCount=function(count){var $this=base.$el,$countEl=$this.nextAll('.'+base.options.countContainerClass);$countEl.children('.'+base.options.textCountClass).text(count)};base.setErrors=function(type){var $this=base.$el,$countEl=$this.nextAll('.'+base.options.countContainerClass);$this.addClass(base.options.inputErrorClass);$countEl.addClass(base.options.counterErrorClass);if(base.options.displayErrorText){switch(type){case 'min':errorText=base.options.minimumErrorText;break;case 'max':errorText=base.options.maximumErrorText;break}
if(!$countEl.children('.error-text-'+type).length){$countEl.append('<'+base.options.errorTextElement+' class="error-text error-text-'+type+'">'+errorText+'</'+base.options.errorTextElement+'>')}}};base.clearErrors=function(type){var $this=base.$el,$countEl=$this.nextAll('.'+base.options.countContainerClass);$countEl.children('.error-text-'+type).remove();if($countEl.children('.error-text').length==0){$this.removeClass(base.options.inputErrorClass);$countEl.removeClass(base.options.counterErrorClass)}};base.init()};$.textcounter.defaultOptions={'type':"character",'min':0,'max':200,'countContainerElement':"div",'countContainerClass':"text-count-wrapper",'textCountClass':"text-count",'inputErrorClass':"error",'counterErrorClass':"error",'counterText':"Total Count: ",'errorTextElement':"div",'minimumErrorText':"Minimum not met",'maximumErrorText':"Maximum exceeded",'displayErrorText':!0,'stopInputAtMaximum':!0,'countSpaces':!1,'countDown':!1,'countDownText':"Remaining: ",'countExtendedCharacters':!1,maxunder:function(el){},minunder:function(el){},maxcount:function(el){},mincount:function(el){},init:function(el){}};$.fn.textcounter=function(options){return this.each(function(){new $.textcounter(this,options)})}})(jQuery);
